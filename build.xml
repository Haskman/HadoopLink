<project name="HadoopLink" default="build" basedir=".">
  <property environment="env"/>

  <property name="app.name" value="HadoopLink"/>
  <property name="dist.name" value="dist"/>
	
  <property name="build.dir" location="build"/>
  <property name="src.dir" location="src" />
  <property name="src.java.dir" location="${src.dir}/java"/>
  <property name="src.test.dir" location="${src.dir}/test"/>
  <property name="doc.src.dir" location="docs"/>
  <property name="classes.dir" location="${build.dir}/classes"/>
  <property name="log.dir" location="${basedir}/log"/>
	<property name="lib.dir" location="${basedir}/Java"/>
	
	<property name="hadoop.home" location="${env.HADOOP_HOME}"/>
	<property name="mathematica.dir" location="/Applications/Mathematica.app"/>
	<property name="workbench.dir" location="/Applications/eclipse"/>
  <property name="dist.dir" value="${basedir}/${dist.name}/${app.name}"/>

  <target name="clean" description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build.dir}"/>
    <delete dir="${classes.dir}"/>
    <delete dir="${log.dir}"/>
  	<delete dir="${basedir}/${dist.name}"/>
    <delete dir="HadoopLink/Java"/>
  </target>
	
  <target name="init">
    <tstamp/>

    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${log.dir}"/>

    <fail message="Please set the hadoop.home property to the path of your Hadoop installation.">
      <condition>
        <not><isset property="hadoop.home"/></not>
      </condition>
    </fail>

    <fail message="Please set the mathematica.dir property to the path of your Mathematica installation.">
      <condition>
        <not><isset property="mathematica.dir"/></not>
      </condition>
    </fail>

    <property name="jlink.jar" location="${mathematica.dir}/SystemFiles/Links/JLink/JLink.jar"/>
    <property name="mathExe" value="${mathematica.dir}/Contents/MacOS/MathKernel"/>

    <condition property="skip.docbuild">
      <not><isset property="workbench.dir"/></not>
    </condition>

    <!-- Load J/Link and set up the mathematica task type -->
    <taskdef name="mathematica" classname="com.wolfram.jlink.util.MathematicaTask"
      classpath="${jlink.jar}"/>

    <mathematica exe="${mathExe}">
      <![CDATA[

        AntSetProperty["user.app.dir", FileNameJoin[{$UserBaseDirectory, "Applications"}]];

        search[path_, form_] :=
          Module[
            {files, dirs},
            files = FileNames[form, {path}];
            If[ Length@files > 0,

              files,
              dirs = Select[FileNames["*", path], DirectoryQ];
              Flatten@Table[search[dir, form], {dir, dirs}]
            ]
          ];

          workbenchDir = AntProperty["workbench.dir"];
          If[ workbenchDir =!= Null,

            AntLog["Searching path "<>workbenchDir<>" for DocumentationBuild source."];
            paths = search[workbenchDir, "DocumentationBuild"];

            If[ Length@paths > 0,

              AntLog[paths[[1]]];

              AntSetProperty[
                "mathematica.app.dir",
                ParentDirectory[AbsoluteFileName@paths[[1]]]
              ];

            ]
          ];

          (* Extract the version number from PacletInfo.m *)
          paclet = Import[FileNameJoin[{
            AntProperty["basedir"],
            AntProperty["app.name"],
            "PacletInfo.m"}]
          ];
          version = Version /. List@@paclet;
          AntSetProperty["version", version];
      ]]>
    </mathematica>

    <path id="classpath">
      <fileset dir="${hadoop.home}">
        <include name="*.jar"/>
        <include name="lib/**/*.jar"/>
      	<include name="contrib/streaming/*.jar"/>
      </fileset>
      <pathelement location="${jlink.jar}"/>
    </path>
  </target>

  <target name="compile" depends="init" description="compile the source">
    <!-- Compile the java code from ${src.java} into ${build} -->
    <javac srcdir="${src.java.dir}" destdir="${classes.dir}"
      debug="${java.debug}" debuglevel="lines,vars,source">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="jar" depends="compile" description="package up Java components">
    <!-- The core jar holds classes intended to be used primarily from Mathematica -->
    <delete file="${build.dir}/${app.name}-core-${version}.jar"/>
    <jar jarfile="${build.dir}/${app.name}-core-${version}.jar">
      <fileset dir="${classes.dir}">
        <include name="**/ExprUtil.class"/>
        <include name="com/wolfram/hadoop/dfs/*.class"/>
      </fileset>
    </jar>

    <!-- The mapreduce jar is used to construct job jars. -->
    <delete file="${build.dir}/${app.name}-mapreduce-${version}.jar"/>
    <jar jarfile="${build.dir}/${app.name}-mapreduce-${version}.jar">
      <fileset dir="${classes.dir}">
        <include name="**/ExprUtil.class"/>
        <include name="com/wolfram/hadoop/mapreduce/*.class"/>
      </fileset>
      <fileset dir="${basedir}/${app.name}">
        <include name="MapReduceAPI.m"/>
      </fileset>
    </jar>
  </target>

  <target name="docbuild" depends="init" unless="skip.docbuild" description="">
    <!-- Check for the location of DocumentationBuild -->
    <fail message="Please set the mathematica.app.dir property to
      the path where the DocumentationBuild application is located">
      <condition>
        <not><isset property="mathematica.app.dir"/></not>
      </condition>
    </fail>

    <!-- Set up the properties expected by the doc build script -->
    <property name="appPath" value="${mathematica.app.dir}"/>
    <property name="mathematicaInstallDir" value="${mathematica.dir}"/>
    <property name="inputDir" value="${doc.src.dir}/English"/>
    <property name="outputDir" value="${dist.dir}/Documentation/English"/>
    <property name="logdir" value="${log.dir}"/>
    <property name="JLinkLoaded" value="true"/>
    <property name="jlink.lib" value="${jlink.jar}"/>

    <!-- call into documentation build scripts that ship with Mathematica -->
    <ant
      antfile="${appPath}/DocumentationBuild/SystemFiles/ant/Build/notebook.xml"
      target="main"/>
  </target>

  <target name="build" depends="jar" description="assemble all the components of the application">
    <mkdir dir="${dist.dir}"/>
    <copy todir="${dist.dir}">
      <fileset dir="${basedir}/${app.name}">
        <include name="**/*.m"/>
      </fileset>
    </copy>
    <copy todir="${dist.dir}/Java"
      file="${build.dir}/${app.name}-core-${version}.jar"/>
  	<copy todir="${dist.dir}/Java">
      <fileset dir="${basedir}/Java/">
        <include name="*.jar" />
      </fileset>
  	</copy>
    <copy todir="${dist.dir}/Data"
      file="${build.dir}/${app.name}-mapreduce-${version}.jar"/>
  </target>
	
  <target name="dist" depends="build,docbuild">
    <zip destfile="${basedir}/${dist.name}/${app.name}-${version}.zip" basedir="${basedir}/${dist.name}"/>
  </target>
</project>
